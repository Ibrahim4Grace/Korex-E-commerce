<!DOCTYPE html>
<html lang="en">

<head>
    <title>Korex StyleHub</title>
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <meta content="Korex StyleHub" name="keywords">
    <meta content="Korex StyleHub" name="description">

      <!-- Favicon -->
      <link href="../img/logo.PNG" rel="icon"> 

    <!-- Google Web Fonts -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Heebo:wght@400;500;600;700&display=swap" rel="stylesheet">
    
    <!-- Icon Font Stylesheet -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.4.1/font/bootstrap-icons.css" rel="stylesheet">

    <!-- Libraries Stylesheet -->
    <link href="../lib/owlcarousel/assets/owl.carousel.min.css" rel="stylesheet">
    <link href="../lib/tempusdominus/css/tempusdominus-bootstrap-4.min.css" rel="stylesheet" />

    <!-- Customized Bootstrap Stylesheet -->
    <link href="../css/bootstrap.min.css" rel="stylesheet">

    <!-- Template Stylesheet -->
    <link href="../css/styles.css" rel="stylesheet">

</head>

<body>

     

    <div class="container-xxl position-relative bg-white d-flex p-0">
       
        <!-- Navbar Start -->
     <%- include (`../partials/merchantHeader`); -%>
     <!-- Navbar End -->

                            <!-- Product Start -->
     <div class="container-fluid pt-4 px-4">

                                     <!-- Toast start -->
                            <div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
                               <div id="toastContainer" class="toast-container"></div>
                            </div>
                                      <!-- Toast End -->

        <div class="bg-light text-center rounded p-4">
    
            <div class="d-flex align-items-center justify-content-between mb-4">
                <h6 class="mb-0">Products</h6>
                <div class="tab">
                    <a class="tablinks" onclick="openCity(event, 'All')" id="defaultOpen">All</a>
                    <a class="tablinks" onclick="openCity(event, 'In Stock')">In Stock</a>
                    <a class="tablinks" onclick="openCity(event, 'Low Stock')">Low Stock</a>
                    <a class="tablinks" onclick="openCity(event, 'Out of Stock')">Out of Stock</a>
                    <a class="tablinks" onclick="openCity(event, 'Draft')">Draft</a>

                   
                </div>
                <!-- <button type="button" class="btn btn-primary m-2">+ New Product</button> -->
                <button type="button" class="btn btn-primary m-2 btnBorder" id="newProductBtn">+ New Product</button>



                
                <!-- OPEN MODEL END  -->
            </div>
    
            <div id="All" class="tabcontent">
                <h3>All</h3>
                <div class="table-responsive">
                    <table class="table text-start align-middle table-bordered table-hover mb-0">
                        <thead>
                            <tr class="text-dark">
                                <th scope="col"><input class="form-check-input" type="checkbox"></th>
                                <th scope="col">Product Images</th>
                                <th scope="col">Product Name</th>
                                <th scope="col">Product Price</th>
                                <th scope="col">Shipping Fees</th>
                                <th scope="col">Product Category</th>
                                <th scope="col">Product Brand</th>
                                <th scope="col" style="text-align: center;">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% if (ourProducts.length > 0) { %>
                                <% ourProducts.forEach(products => { %>
                                    <tr class="center">
                                        <th scope="col"><input class="form-check-input" type="checkbox"></th>
                                        <td>
                                            <% if (products.images && products.images.length > 0) { %>
                                                <% products.images.forEach(image => { %>
                                                    <img class="imageSize" src="data:<%= image.contentType %>;base64,<%= image.data.toString('base64') %>" alt="Product Image">
                                                <% }) %>
                                            <% } else { %>
                                                NA
                                            <% } %>
                                        </td>                                        
                                        <td><%= products.productName %></td>
                                        <td><%= products.productPrice %></td>
                                        <td><%= products.productShipping %></td>
                                        <td><%= products.productCategory %></td>
                                        <td><%= products.productBrand %></td>
                                        <td data-label="Profile">
                                            <!-- View Button -->
                                            <input type="button" value="View" class="btn btn-primary btn-sm view-button btnBorder" data-product-id="<%= products._id %>">
                                            <!-- Edit Button -->
                                            <input type="button" value="Edit" class="btn btn-primary btn-sm edit-button btnBorder" data-product-id="<%= products._id %>">

                                            <!-- Delete Button -->
                                            <input type="button" value="Delete" class="btn btn-danger btn-sm delete-button btnBorder" data-product-id="<%= products._id %>">
                                        </td>
                                    </tr>
                                <% }); %>
                            <% } else { %>
                                <tr>
                                    <td colspan="8" class="text-center">You are yet to have products with KorexStyleHub</td>
                                </tr>
                            <% } %>
                        </tbody>
                    </table>
                    <div class="pagination">
                        <% for (let i=1; i <=totalPages; i++) { %>
                            <a href="/merchant/products?page=<%= i %>"
                                class="<%= currentPage === i ? 'active' : '' %>">
                                <%= i %>
                            </a>
                        <% } %>
                    </div>
                </div>
            </div>
                        <!-- START VIEW PRODUCT INFORMATION -->
                        <div class="viewModals">
                            <div class="viewModal-content">
                                <span class="close-button">Ã—</span>
                                <h1>Product Details</h1>
                            
                                <p>Product Name: <span id="name"></span></p>
                                <p>Price: <span id="price"></span></p>
                                <p>Shipping Fee: <span id="shipping"></span></p>
                                <p>Category: <span id="category"></span></p>
                                <p>Brand: <span id="brand"></span></p>
                                <p>Size: <span id="size"></span></p>
                                <p>Color: <span id="color"></span></p>
                                <p>Quantity: <span id="quantity"></span></p>
                                <p>In Stock: <span id="inStock"></span></p>
                                <p>Low Stock: <span id="lowStock"></span></p>
                                <p>Out Of Stock: <span id="outOfStock"></span></p>
                                <p>Description: <span id="description"></span></p>
                                <p>Date Added: <span id="date_added"></span></p>
                            </div>
                        </div>
                            
                              <!-- Update the JavaScript code in products.ejs -->
                        <script>
                            let modal = document.querySelector(".viewModals");
                            let closeButton = document.querySelector(".close-button");

                            function toggleModal() {
                                modal.classList.toggle("show-modal");
                            }

                            function windowOnClick(event) {
                                if (event.target === modal) {
                                    toggleModal();
                                }
                            }

                            closeButton.addEventListener("click", toggleModal);
                            window.addEventListener("click", windowOnClick);

                                     // Function to handle the click event of the view button
                            document.querySelectorAll('.view-button').forEach(button => {
                                button.addEventListener('click', function(event) {
                                    event.preventDefault();

                                     // Fetch the product information and update the modal content here
                                    const productId = this.getAttribute('data-product-id');
                                             // Fetch product information using AJAX
                                    fetch(`/merchant/viewProduct/${productId}`)
                                    .then(response => response.json())
                                    .then(data => {
                                        if (data.success) {
                                            // Display product information in the modal
                                            const productInfo = data.productInfo;
                                            document.getElementById('name').textContent = productInfo.productName;
                                            document.getElementById('price').textContent = productInfo.productPrice;
                                            document.getElementById('shipping').textContent = productInfo.productShipping;
                                            document.getElementById('category').textContent = productInfo.productCategory;
                                            document.getElementById('brand').textContent = productInfo.productBrand;
                                            document.getElementById('size').textContent = productInfo.productSize;
                                            document.getElementById('color').textContent = productInfo.productColor;
                                            document.getElementById('quantity').textContent = productInfo.productQuantity;
                                            document.getElementById('inStock').textContent = productInfo.productInStock;
                                            document.getElementById('lowStock').textContent = productInfo.productLowStock;
                                            document.getElementById('outOfStock').textContent = productInfo.productOutOfStock;
                                            document.getElementById('description').textContent = productInfo.productDescription;
                                            document.getElementById('date_added').textContent = productInfo.date_added;
                                             // Toggle the modal visibility
                                            toggleModal();
                                        } else {
                                            console.error('Failed to fetch product information:', data.errors[0].msg);
                                        }
                                    })
                                    .catch(error => {
                                        console.error('Error fetching product information:', error);
                                    });
                                });
                            });
                        </script>
                        <!-- END VIEW PRODUCT INFORMATION -->

                        <!-- START EDIT PRODUCT INFORMATION -->
                        <div class="editModals">
                            <div class="editModals-content">
                                <span class="closed-button">Ã—</span>
                                <h1>Edit Product Details</h1>
                              
                           

                                    <form id="editProductForm" action="/merchant/editProductPost" method="post">
                                        <h1 class="headingTopic"> Click to edit the product information. </h1>
                                
                                        <div class="l-section">
                                          <h5 class="c-section__heading">Some important info</h5>
                                          <span class="c-link js-toggleForm">click to edit</span>
                                          <div class="form">
                        
                                            <div>
                                              <label>Product Name</label>
                                              <input type="text" name="productName" id="productName"/>
                                            </div>
                                            
                                            <div>
                                              <label>Product Price ($)</label>
                                              <input type="number" name="productPrice" id="productPrice"/>
                                            </div>
                        
                                            <div>
                                              <label>Shipping Fee ($)</label>
                                              <input type="number" name="productShipping" id="productShipping"/>
                                            </div>

                                            <div>
                                              <label>Product Category</label>
                                            <input type="text" name="productCategory" id="productCategory"/>
                                            </div>
                        
                                            <div>
                                              <label>Product Brand</label>
                                              <input type="text" name="productBrand" id="productBrand"/>
                                            </div>
                                     
                                            <div>
                                              <label>Product Sizes</label>
                                              <input type="text" name="productSize" id="productSize"/>
                                            </div>
                                            
                                            <div>
                                              <label>Product Color</label>
                                              <input type="text" name="productColor" id="productColor"/>
                                            </div>
                                            
                                            <div>
                                              <label>Product Quantity</label>
                                              <input type="number" name="productQuantity" id="productQuantity"/>
                                            </div>
                                            
                                            <div>
                                              <label>Product In Stock </label>
                                              <input type="number" name="productInStock" id="productInStock"/>
                                            </div>
                        
                                            <div>
                                              <label>Product Low Stock</label>
                                              <input type="number" name="productLowStock" id="productLowStock"/>
                                            </div>
                        
                                            <div>
                                              <label>Product Out Of Stock</label>
                                              <input type="number" name="productOutOfStock" id="productOutOfStock"/>
                                            </div>

                                            <div>
                                                <label>Product Description</label>
                                                <textarea name="productDescription" class="form-control input-lg" rows="5" maxlength="250" id="productDescription"></textarea>
                                            </div>
                                           
                                            <button type="submit" class="btn btn-primary">submit</button>
                                          </div>
                                        </div>
                                      </form>
                            
                              
                                
                            </div>
                        </div>

                        <script>
                            document.addEventListener("DOMContentLoaded", function() {
                                // Your existing script code here
                                let editModal = document.querySelector(".editModals");
                                let editCloseButton = document.querySelector(".editModals .closed-button");
                        
                                function toggleEditModal() {
                                    editModal.classList.toggle("shows-editModal");
                                }
                        
                                function windowOnClick(event) {
                                    if (event.target === editModal) {
                                        toggleEditModal();
                                    }
                                }
                        
                                editCloseButton.addEventListener("click", toggleEditModal);
                                window.addEventListener("click", windowOnClick);
                        
                                // Function to handle the click event of the edit button
                                document.querySelectorAll('.edit-button').forEach(button => {
                                    button.addEventListener('click', function(event) {
                                        event.preventDefault();
                        
                                        // Fetch the product information and update the modal content here
                                        const productId = this.getAttribute('data-product-id');
                                        // Fetch product information using AJAX
                                        fetch(`/merchant/editProduct/${productId}`)
                                        .then(response => response.json())
                                        .then(data => {
                                            if (data.success) {
                                                // Edit product information in the modal
                                                const editProduct = data.editProduct;
                                                console.log("user updated product information", data.editProduct)
                                                document.getElementById('productName').value  = editProduct.productName;
                                                document.getElementById('productPrice').value  = editProduct.productPrice;
                                                document.getElementById('productShipping').value  = editProduct.productShipping;
                                                document.getElementById('productCategory').value  = editProduct.productCategory;
                                                document.getElementById('productBrand').value  = editProduct.productBrand;
                                                document.getElementById('productSize').value  = editProduct.productSize;
                                                document.getElementById('productColor').value  = editProduct.productColor;
                                                document.getElementById('productQuantity').value  = editProduct.productQuantity;
                                                document.getElementById('productInStock').value  = editProduct.productInStock;
                                                document.getElementById('productLowStock').value  = editProduct.productLowStock;
                                                document.getElementById('productOutOfStock').value  = editProduct.productOutOfStock;
                                                document.getElementById('productDescription').value  = editProduct.productDescription;
                                                // Toggle the modal visibility
                                                toggleEditModal();
                                            } else {
                                                console.error('Failed to fetch product information:', data.errors[0].msg);
                                            }
                                        })
                                        .catch(error => {
                                            console.error('Error fetching product information:', error);
                                        });
                                    });
                                });

                                // Function to handle the form submission
                                document.getElementById('editProductForm').addEventListener('submit', function(event) {
                                    event.preventDefault();

                                    const formData = new FormData(this);

                                    fetch('/merchant/editProductPost', {
                                        method: 'POST',
                                        body: formData
                                    })
                                    .then(response => response.json())
                                    .then(data => {
                                        if (data.success) {
                                            // Handle success response
                                            console.log("Product information edited successfully!");
                                            // Close the modal
                                            toggleEditModal();
                                        } else {
                                            // Handle error response
                                            console.error('Failed to edit product information:', data.errors[0].msg);
                                        }
                                    })
                                    .catch(error => {
                                        console.error('Error editing product information:', error);
                                    });
                                });
                            });

                        </script>
                        <!-- END EDIT PRODUCT INFORMATION -->

                        <!-- FUNCTION TO HANDLE THE CLICK EVENT OF DELETE BUTTON  -->
                        <script>   
                                document.querySelectorAll('.delete-button').forEach(button => {
                                    button.addEventListener('click', function(event) {
                                        event.preventDefault(); // Prevent default behavior of button click
       
                                        const productId = this.getAttribute('data-product-id');
                                        fetch(`/merchant/deleteProduct/${productId}`, {
                                            method: 'GET',
                                            headers: {
                                                'Content-Type': 'application/json'
                                            }
                                        })
                                        .then(response => {
                                            if (response.ok) {
                                                // Handle success response
                                                // Show toast before redirection if necessary
                                                showToast('Product deleted successfully', 'success');
                                                window.location.href = "/merchant/products";
                                            } else {
                                                     // Handle error response
                                                   if (response.status === 404) {
                                                    showToast('Product not found', 'error');
                                                } else {
                                                    showToast('Error deleting product', 'error');
                                                }
                                                throw new Error('Network response was not ok.');
                                            }
                                        })
                                        .catch(error => {
                                            console.error('Error deleting product:', error.message);
                                           // Handle network or server error if needed
                                           showToast('Error deleting product: ' + error.message, 'error');
                                        });
                                    });
                                });
       
                        </script>
                        <!-- End click event of the delete button -->

                    <!-- <script>
              
                // Function to handle the click event of the edit button
                document.querySelectorAll('.edit-button').forEach(button => {
                    button.addEventListener('click', function() {
                        const productId = this.getAttribute('data-product-id');
                        window.location.href = "/merchant/editProduct/" + productId;
                    });
                });
            
            
            </script> -->
                
    
            <div id="In Stock" class="tabcontent">
                <h3>In Stock</h3>
                <div class="table-responsive">
                    <table class="table text-start align-middle table-bordered table-hover mb-0">
                        <thead>
                            <tr class="text-dark">
                                <th scope="col"><input class="form-check-input" type="checkbox"></th>
                                <th scope="col">product Image</th>
                                <th scope="col">Product Name</th>
                                <th scope="col">Product Price</th>
                                <th scope="col">shipping Fees</th>
                                <th scope="col">Product Category</th>
                                <th scope="col">Product Brand</th>
                                <th scope="col" style="text-align: center;">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% if (ourProducts.length > 0) { %>
                                <% ourProducts.forEach(products => { %>
                                    <tr class="center">
                                        <th scope="col"><input class="form-check-input" type="checkbox"></th>
                                        <td>
                                            <% if (products.image && products.image.data) { %>
                                                <img src="data:<%= products.image.contentType %>;base64,<%= products.image.data.toString('base64') %>" alt="Products Image">
                                            <% } else { %>
                                                NA
                                            <% } %>
                                        </td>
                                        <td><%= products.productName %></td>
                                        <td><%= products.productPrice %></td>
                                        <td><%= products.productShipping %></td>
                                        <td><%= products.productCategory %></td>
                                        <td><%= products.productBrand %></td>
                                        <td data-label="Profile">
                                            <!-- Edit Button -->
                                            <input type="button" value="Edit" class="btn btn-primary btn-sm edit-button" data-product-id="<%= products._id %>">
                                            <!-- Delete Button -->
                                            <input type="button" value="Delete" class="btn btn-danger btn-sm delete-button" data-product-id="<%= products._id %>">
                                        </td>
                                    </tr>
                                <% }); %>
                            <% } else { %>
                                <tr>
                                    <td colspan="8" class="text-center">You are yet to have products with KorexStyleHub</td>
                                </tr>
                            <% } %>
                        </tbody>
                    </table>
                    <div class="pagination">
                        <% for (let i=1; i <=totalPages; i++) { %>
                            <a href="/merchant/products?page=<%= i %>"
                                class="<%= currentPage === i ? 'active' : '' %>">
                                <%= i %>
                            </a>
                        <% } %>
                    </div>
                </div>
            </div>
    
            <div id="Low Stock" class="tabcontent">
                <h3>Low Stock</h3>
                <div class="table-responsive">
                    <table class="table text-start align-middle table-bordered table-hover mb-0">
                        <thead>
                            <tr class="text-dark">
                                <th scope="col"><input class="form-check-input" type="checkbox"></th>
                                <th scope="col">product Image</th>
                                <th scope="col">Product Name</th>
                                <th scope="col">Product Price</th>
                                <th scope="col">shipping Fees</th>
                                <th scope="col">Product Category</th>
                                <th scope="col">Product Brand</th>
                                <th scope="col" style="text-align: center;">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% if (ourProducts.length > 0) { %>
                                <% ourProducts.forEach(products => { %>
                                    <tr class="center">
                                        <th scope="col"><input class="form-check-input" type="checkbox"></th>
                                        <td>
                                            <% if (products.image && products.image.data) { %>
                                                <img src="data:<%= products.image.contentType %>;base64,<%= products.image.data.toString('base64') %>" alt="Products Image">
                                            <% } else { %>
                                                NA
                                            <% } %>
                                        </td>
                                        <td><%= products.productName %></td>
                                        <td><%= products.productPrice %></td>
                                        <td><%= products.productShipping %></td>
                                        <td><%= products.productCategory %></td>
                                        <td><%= products.productBrand %></td>
                                        <td data-label="Profile">
                                            <!-- Edit Button -->
                                            <input type="button" value="Edit" class="btn btn-primary btn-sm edit-button" data-product-id="<%= products._id %>">
                                            <!-- Delete Button -->
                                            <input type="button" value="Delete" class="btn btn-danger btn-sm delete-button" data-product-id="<%= products._id %>">
                                        </td>
                                    </tr>
                                <% }); %>
                            <% } else { %>
                                <tr>
                                    <td colspan="8" class="text-center">You are yet to have products with KorexStyleHub</td>
                                </tr>
                            <% } %>
                        </tbody>
                    </table>
                    <div class="pagination">
                        <% for (let i=1; i <=totalPages; i++) { %>
                            <a href="/merchant/products?page=<%= i %>"
                                class="<%= currentPage === i ? 'active' : '' %>">
                                <%= i %>
                            </a>
                        <% } %>
                    </div>
                </div>
            </div>
    
            <div id="Out of Stock" class="tabcontent">
                <h3>Out of Stock</h3>
                <div class="table-responsive">
                    <table class="table text-start align-middle table-bordered table-hover mb-0">
                        <thead>
                            <tr class="text-dark">
                                <th scope="col"><input class="form-check-input" type="checkbox"></th>
                                <th scope="col">product Image</th>
                                <th scope="col">Product Name</th>
                                <th scope="col">Product Price</th>
                                <th scope="col">shipping Fees</th>
                                <th scope="col">Product Category</th>
                                <th scope="col">Product Brand</th>
                                <th scope="col" style="text-align: center;">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% if (ourProducts.length > 0) { %>
                                <% ourProducts.forEach(products => { %>
                                    <tr class="center">
                                        <th scope="col"><input class="form-check-input" type="checkbox"></th>
                                        <td>
                                            <% if (products.image && products.image.data) { %>
                                                <img src="data:<%= products.image.contentType %>;base64,<%= products.image.data.toString('base64') %>" alt="Products Image">
                                            <% } else { %>
                                                NA
                                            <% } %>
                                        </td>
                                        <td><%= products.productName %></td>
                                        <td><%= products.productPrice %></td>
                                        <td><%= products.productShipping %></td>
                                        <td><%= products.productCategory %></td>
                                        <td><%= products.productBrand %></td>
                                        <td data-label="Profile">
                                            <!-- Edit Button -->
                                            <input type="button" value="Edit" class="btn btn-primary btn-sm edit-button" data-product-id="<%= products._id %>">
                                            <!-- Delete Button -->
                                            <input type="button" value="Delete" class="btn btn-danger btn-sm delete-button" data-product-id="<%= products._id %>">
                                        </td>
                                    </tr>
                                <% }); %>
                            <% } else { %>
                                <tr>
                                    <td colspan="8" class="text-center">You are yet to have products with KorexStyleHub</td>
                                </tr>
                            <% } %>
                        </tbody>
                    </table>
                    <div class="pagination">
                        <% for (let i=1; i <=totalPages; i++) { %>
                            <a href="/merchant/products?page=<%= i %>"
                                class="<%= currentPage === i ? 'active' : '' %>">
                                <%= i %>
                            </a>
                        <% } %>
                    </div>
                </div>
            </div>
    
            <div id="Draft" class="tabcontent">
                <h3>Draft</h3>
                <div class="table-responsive">
                    <table class="table text-start align-middle table-bordered table-hover mb-0">
                        <thead>
                            <tr class="text-dark">
                                <th scope="col"><input class="form-check-input" type="checkbox"></th>
                                <th scope="col">product Image</th>
                                <th scope="col">Product Name</th>
                                <th scope="col">Product Price</th>
                                <th scope="col">shipping Fees</th>
                                <th scope="col">Product Category</th>
                                <th scope="col">Product Brand</th>
                                <th scope="col" style="text-align: center;">Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            <% if (ourProducts.length > 0) { %>
                                <% ourProducts.forEach(products => { %>
                                    <tr class="center">
                                        <th scope="col"><input class="form-check-input" type="checkbox"></th>
                                        <td>
                                            <% if (products.image && products.image.data) { %>
                                                <img src="data:<%= products.image.contentType %>;base64,<%= products.image.data.toString('base64') %>" alt="Products Image">
                                            <% } else { %>
                                                NA
                                            <% } %>
                                        </td>
                                        <td><%= products.productName %></td>
                                        <td><%= products.productPrice %></td>
                                        <td><%= products.productShipping %></td>
                                        <td><%= products.productCategory %></td>
                                        <td><%= products.productBrand %></td>
                                        <td data-label="Profile">
                                            <!-- Edit Button -->
                                            <input type="button" value="Edit" class="btn btn-primary btn-sm edit-button" data-product-id="<%= products._id %>">
                                            <!-- Delete Button -->
                                            <input type="button" value="Delete" class="btn btn-danger btn-sm delete-button" data-product-id="<%= products._id %>">
                                        </td>
                                    </tr>
                                <% }); %>
                            <% } else { %>
                                <tr>
                                    <td colspan="8" class="text-center">You are yet to have products with KorexStyleHub</td>
                                </tr>
                            <% } %>
                        </tbody>
                    </table>
                    <div class="pagination">
                        <% for (let i=1; i <=totalPages; i++) { %>
                            <a href="/merchant/products?page=<%= i %>"
                                class="<%= currentPage === i ? 'active' : '' %>">
                                <%= i %>
                            </a>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>
    </div>
            <!-- Product End -->

                          

                              


        
     <!-- Footer Start -->
     <%- include (`../partials/merchantFooter`); -%>
     <!-- Footer End -->

     <!-- Modal HTML -->
    <form id="productForm" action="/merchant/merchantProductsPost" method="post" enctype="multipart/form-data">
	<div id="myModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
		<div class="modal-dialog">
			<div class="modal-content">
            

				         <!-- Modal Header  (1/3) -->
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">Ã—</button>
                        <h3 id="myModalLabel">Add New Product</h3>
                    </div>

			         <!-- Modal Body (2/3) -->
                    <div class="modal-body" id="serviceModalMultiStep">
					         <!-- Progress Bar -->
					    <div class="progress">
                            <div class="progress-bar progress-bar-success progress-bar-striped active" 
                                role="progressbar" aria-valuenow="1" aria-valuemin="1" aria-valuemax="4" style="width: 20%;">
                            </div>
                        </div>

					         <!-- Tab Steps-->
					    <div class="navbar" style="display: block;">
                            <div class="navbar-inner">
                                <ul class="nav nav-tabs nav-justified">
                                    <li class="active">
                                        <a href="#step1" data-toggle="tab" data-step="1">Information</a>
                                    </li>
                                    <li>
                                        <a href="#step2" data-toggle="tab" data-step="2">Specifications</a>
                                    </li>
                                    <li>
                                        <a href="#step3" data-toggle="tab" data-step="3">Image</a>
                                    </li>
								
                                </ul>
                            </div>
                        </div>

					         <!-- Tab Content -->
					    <div class="tab-content">
					         	<!-- Tab 1 -->
						    <div class="tab-pane fade in active" id="step1">
                                <div class="well">
                                    <label>Product Name</label>
                                    <input type="text" class="form-control" name="productName" placeholder="Enter product name" required autocomplete="no">
                                    <div id="productNameError" class="error"></div>
								
                                    <br>
                                    <label>Product Description</label>
                                    <textarea name="productDescription" class="form-control input-lg" rows="5" maxlength="250" onfocus="if(this.value === 'Enter product description') { this.value = ''; }">Enter product description</textarea>
                                    <div id="productDescriptionError" class="error"></div>
                                    <br>

                                    <div class="row">
                                        <div class="col-md-6">
                                            <label for="size">Product Price ($)</label>
                                            <input type="number" name="productPrice" class="form-control" placeholder="Example 100." autocomplete="no">
                                            <div id="productPriceError" class="error"></div>
                                        </div>
                                        <div class="col-md-6">
                                            <label for="color">Product Shipping ($)</label>
                                            <input type="number" name="productShipping" class="form-control" placeholder="Example 90" autocomplete="no">
                                            <div id="productShippingError" class="error"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>

					         	<!-- Tab 2 -->
						    <div class="tab-pane fade" id="step2">
                                <div class="well">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <% const productCategory = ["Baby Dress","Blazers", "Dresses","Jackets","Jeans","Jumpsuits","loafers", "Shirts","Sleepwears","Sneakers","Sportwears","Swimwears"]; %>
                                            <label for="color">Product Category</label>
                                            <select name="productCategory" class="form-control backColor" style="background-color: #fff;">
                                                <option value="">Select product category</option>
                                                <% productCategory.forEach((category )=> { %>
                                                    <option value="<%- category  %>"><%- category  %></option>
                                                 <% }) %>
                                            </select>
                                            <div id="productCategoryError" class="error"></div>
                                        </div>
                                        <div class="col-md-6">
                                            <label for="color">Product brand</label>
                                            <input type="text" name="productBrand" class="form-control" placeholder="Enter product brand" autocomplete="no">
                                            <div id="productBrandError" class="error"></div>
                                        </div>
                                    </div>

                                    <div class="row">
                                        <div class="col-md-6 multiSelect">
                                            <select name="productSize[]" class="multiSelect_field" data-placeholder="Select Sizes" multiple>
                                                <option value="XS">XS</option>
                                                <option value="S">S</option>
                                                <option value="M">M</option>
                                                <option value="L">L</option>
                                                <option value="XL">XL</option>
                                                <option value="2XL">2XL</option>
                                            </select>
                                                <div id="productSizeError" class="error"></div>
                                        </div>
                                        <div class="col-md-6 multiSelect">
                                            <select name="productColor[]" class="multiSelect_field" data-placeholder="Select Colors" multiple>
                                                <option value="Black">Black</option>
                                                <option value="Blue">Blue</option>
                                                <option value="Green">Green</option>
                                                <option value="Purple">Purple</option>
                                                <option value="White">White</option>
                                                <option value="Pink">Pink</option>
                                            </select>
                                            <div id="productColorError" class="error"></div>
                                        </div>
                                    </div><br>

                                        <div class="row">
                                             <div class="col-md-6">
                                                <label for="color">Quantity</label>
                                                <input type="number" name="productQuantity" class="form-control" autocomplete="no">
                                                <div id="productQuantityError" class="error"></div>
                                            </div>
                                        </div>
                                </div>
                            </div>
						         <!-- Tab 3 -->
						        <div class="tab-pane fade" id="step3">
                                    <div class="well">
                                        <section>
                                            <div class="container my-5" id="form-upload">
                                                <h3 class="text-center">Multiple Upload Images and Remove Button </h3>
                                                <div class="row">
                                                    <div>
                                                        <label style="font-size: 14px;">
                                                            <span style='color:navy;font-weight:bold'>Attachment Instructions :</span>
                                                        </label>
                                                        <ul>
                                                            <li>
                                                                Allowed only files with extension (jpg, png, gif)
                                                            </li>
                                                            <li>
                                                                Maximum number of allowed files 3 
                                                            </li>
                                                        </ul>
                                                        <span class="btn btn-success fileinput-button">
                                                            <span>Select Attachment</span>
                                                            <input type="file" name="images[]" id="files" multiple="multiple accept="image/jpeg, image/png, image/gif,"><br />
                                                        </span>
                                                        <output id="Filelist"></output>
                                                    </div>
                                                 </div>
                                              </div>
                                        </section>
                                    </div>
                                </div>
                            </div>
                        </div>

				         <!-- Modal Footer (3/3) -->
                        <div class="modal-footer" style="margin: 1px auto;">
                            <div class="left-footer">
                                <a class="btn btn-success first" href="#">Start over</a>
                            </div>
                            <div class="right-footer">
                                <a class="btn btn-default back" href="#">Back</a>
                                <a class="btn btn-default next" href="#">Next</a>
                                <button type="submit" class="btn-primary">Submit</button>
                            </div>
                        </div>
                    </div>
             
		    </div>
	</div>
    </form>

                            <!--   Function to open the modal when the button is clicked  Start -->
    <script>
    $(document).ready(function() {
    // Function to open the modal when the button is clicked
    $("#newProductBtn").click(function() {
        $('#myModal').modal('show'); // Show the modal
    });

    let nStep = 3;
    let firstTab = $("#myModal .tab-pane:first-child").attr("id");
    let lastTab = $("#myModal .tab-pane:last-child").attr("id");

    $("#myModal .progress-bar").text("Step 1 of " + nStep);
    $("#myModal .back, #myModal .first").hide();

    // Manually trigger the shown.bs.tab event for the first tab
    $('[href="#' + firstTab + '"]').tab("show").trigger('shown.bs.tab');

    $("#myModal .next").click(function() {
        // Validate current step before proceeding
        if (!validateStep()) return false;

        let currentTab = $("#myModal .tab-pane.active");
        let nextId = currentTab.next().attr("id");
        $("#myModal [href='#" + nextId + "']").tab("show");

        $("#myModal .back, #myModal .first").css("display", "unset");
        if (nextId === lastTab) {
            $("#myModal .next").hide();
            $("#myModal .right-footer .btn-primary").show(); // Show the submit button
        }
        return false;
    });

    $("#myModal .back").click(function() {
        let currentTab = $("#myModal .tab-pane.active");
        let backId = currentTab.prev().attr("id");
        $("#myModal [href='#" + backId + "']").tab("show");

        $("#myModal .next").css("display", "unset");
        if (backId === "step1") {
            $("#myModal .back, #myModal .first").css("display", "none");
        }
        if (backId !== lastTab) {
            $("#myModal .right-footer .btn-primary").hide(); // Hide the submit button
        }
        return false;
    });

    $('a[data-toggle="tab"]').on("shown.bs.tab", function(e) {
        let step = $(e.target).data("step");
        let percent = parseInt(step) / nStep * 100;

        $("#myModal .progress-bar").css({ width: percent + "%" });
        $("#myModal .progress-bar").text("Step " + step + " of " + nStep);

        // Check if the current tab is the "Upload Image" tab
        if ($(e.target).attr("href") === "#step3") {
            $("#myModal .right-footer .btn-primary").show(); // Show the submit button
            $("#myModal .next").hide(); // Hide the next button
        } else {
            $("#myModal .right-footer .btn-primary").hide(); // Hide the submit button
            $("#myModal .next").show(); // Show the next button
        }
    });

    $("#myModal .first").click(function() {
        $("#myModal [href='#" + firstTab + "']").tab("show");
        $("#myModal .back, #myModal .first").css("display", "none");
        $("#myModal .next").css("display", "unset");
        $("#myModal .right-footer .btn-primary").hide(); // Hide the submit button
    });

    // Form submission logic
    $("#productForm").submit(function(event) {
        // Prevent the default form submission
        event.preventDefault();

        // Validate all steps before submission
        if (!validateStep()) return false;

        // Collect form data including files
        let formData = new FormData(this);
    
    // Remove any existing images from formData
    formData.delete('images[]');

    // Append each image file to formData separately
    document.querySelectorAll("input[type='file']").forEach(fileInput => {
        Array.from(fileInput.files).forEach(file => {
            formData.append('images[]', file);
        });
    });

    // Log the FormData object just before sending it to the server
    console.log("FormData object to be sent:", formData);

        // Send the data to the server
        $.ajax({
            url: '/merchant/merchantProductsPost', 
            type: 'POST',
            data: formData,
            processData: false, // Prevent jQuery from processing the data
            contentType: false, // Prevent jQuery from setting content type
            success: function(response) {
                if (response.success) {
                    window.location.href = "/merchant/products";
                } else {
                    // If registration failed, display error messages
                    const errors = response.errors;
                    errors.forEach(error => {
                        const errorElement = document.getElementById(`${error.key}Error`);
                        if (errorElement) {
                            errorElement.textContent = error.msg;
                        }
                    });
                }
            },
            error: function(xhr, status, error) {
                // Handle error
                console.error(xhr.responseText);
                alert('An error occurred while processing your request.');
            }
        });
    });

    // Function to validate current step
    function validateStep() {
        let currentTab = $("#myModal .tab-pane.active");
        let inputs = currentTab.find('input, select');

        let valid = true;
        inputs.each(function() {
            if (!$(this).val()) {
                valid = false;
                let fieldName = $(this).attr('name');
                let errorElement = document.getElementById(fieldName + 'Error');
                if (errorElement) {
                    errorElement.textContent = 'Please fill out this field.';
                }
            }
        });

        return valid;
    }

    // Add event listener to each input field to clear error messages
    const inputFields = document.querySelectorAll('input, select'); // Get all input and select fields
    inputFields.forEach(inputField => {
        inputField.addEventListener('input', () => {
            const fieldName = inputField.name;
            const errorElement = document.getElementById(fieldName + 'Error');
            if (errorElement) {
                // Clear the error message associated with the input field
                errorElement.innerText = '';
            }
        });
    });
});

    </script>
                                    <!--   Function to open the modal when the button is clicked End   -->

                                     <!--   uploading image using file reader start   -->
    <script>
//I added event handler for the file upload control to access the files properties.
document.addEventListener("DOMContentLoaded", init, false);

//To save an array of attachments
let AttachmentArray = [];

//counter for attachment array
let arrCounter = 0;

//to make sure the error message for number of files will be shown only one time.
let filesCounterAlertStatus = false;

//un ordered list to keep attachments thumbnails
let ul = document.createElement("ul");
ul.className = "thumb-Images";
ul.id = "imgList";

function init() {
  //add javascript handlers for the file upload event
  document
    .querySelector("#files")
    .addEventListener("change", handleFileSelect, false);
}

//the handler for file upload event
function handleFileSelect(e) {
  //to make sure the user select file/files
  if (!e.target.files) return;

  //To obtaine a File reference
  let files = e.target.files;

  // Loop through the FileList and then to render image files as thumbnails.
  for (let i = 0, f; (f = files[i]); i++) {
    //instantiate a FileReader object to read its contents into memory
    let fileReader = new FileReader();

    // Closure to capture the file information and apply validation.
    fileReader.onload = (function(readerEvt) {
      return function(e) {
        //Apply the validation rules for attachments upload
        ApplyFileValidationRules(readerEvt);

        //Render attachments thumbnails.
        RenderThumbnail(e, readerEvt);

        //Fill the array of attachment
        FillAttachmentArray(e, readerEvt);
      };
    })(f);

    fileReader.readAsDataURL(f);
  }
  document
    .getElementById("files")
    .addEventListener("change", handleFileSelect, false);
}

//To remove attachment once user click on x button
jQuery(function($) {
  $("div").on("click", ".img-wrap .close", function() {
    let id = $(this)
      .closest(".img-wrap")
      .find("img")
      .data("id");

    //to remove the deleted item from array
    let elementPos = AttachmentArray.map(function(x) {
      return x.FileName;
    }).indexOf(id);
    if (elementPos !== -1) {
      AttachmentArray.splice(elementPos, 1);
    }

    //to remove image tag
    $(this).parent().find("img").not().remove();

    //to remove div tag that contain the image
    $(this).parent().find("div").not().remove();

    //to remove div tag that contain caption name
    $(this).parent().parent().find("div").not().remove();

    //to remove li tag
    let lis = document.querySelectorAll("#imgList li");
    for (let i = 0; (li = lis[i]); i++) {
      if (li.innerHTML == "") {
        li.parentNode.removeChild(li);
      }
    }
  });
});

//Apply the validation rules for attachments upload
function ApplyFileValidationRules(readerEvt) {
  //To check file type according to upload conditions
  if (CheckFileType(readerEvt.type) == false) {
    alert(
      "The file (" +
        readerEvt.name +
        ") does not match the upload conditions, You can only upload jpg/png/gif files"
    );
    e.preventDefault();
    return;
  }

  //To check file Size according to upload conditions
  if (CheckFileSize(readerEvt.size) == false) {
    alert(
      "The file (" +
        readerEvt.name +
        ") does not match the upload conditions, The maximum file size for uploads should not exceed 300 KB"
    );
    e.preventDefault();
    return;
  }

  //To check files count according to upload conditions
  if (CheckFilesCount(AttachmentArray) == false) {
    if (!filesCounterAlertStatus) {
      filesCounterAlertStatus = true;
      alert(
        "You have added more than 3 files. According to upload conditions you can upload 3 files maximum"
      );
    }
    e.preventDefault();
    return;
  }
}

//To check file type according to upload conditions
function CheckFileType(fileType) {
  if (fileType == "image/jpeg") {
    return true;
  } else if (fileType == "image/png") {
    return true;
  } else if (fileType == "image/gif") {
    return true;
  } else if (fileType == "image/jpg") {
    return true;
  }else {
    return false;
  }
  return true;
}

//To check file Size according to upload conditions
function CheckFileSize(fileSize) {
  if (fileSize < 300000) {
    return true;
  } else {
    return false;
  }
  return true;
}

//To check files count according to upload conditions
function CheckFilesCount(AttachmentArray) {
  //Since AttachmentArray.length return the next available index in the array,
  //I have used the loop to get the real length
  let len = 0;
  for (let i = 0; i < AttachmentArray.length; i++) {
    if (AttachmentArray[i] !== undefined) {
      len++;
    }
  }
  //To check the length does not exceed 3 files maximum
  if (len > 2) {
    return false;
  } else {
    return true;
  }
}

//Render attachments thumbnails.
function RenderThumbnail(e, readerEvt) {
  let li = document.createElement("li");
  ul.appendChild(li);
  li.innerHTML = [
    '<div class="img-wrap"> <span class="close">&times;</span>' +
      '<img class="thumb" src="',
    e.target.result,
    '" title="',
    escape(readerEvt.name),
    '" data-id="',
    readerEvt.name,
    '"/>' + "</div>"
  ].join("");

  let div = document.createElement("div");
  div.className = "FileNameCaptionStyle";
  li.appendChild(div);
  div.innerHTML = [readerEvt.name].join("");
  document.getElementById("Filelist").insertBefore(ul, null);
}

//Fill the array of attachment
function FillAttachmentArray(e, readerEvt) {
  AttachmentArray[arrCounter] = {
    AttachmentType: 1,
    ObjectType: 1,
    FileName: readerEvt.name,
    FileDescription: "Attachment",
    NoteText: "",
    MimeType: readerEvt.type,
    Content: e.target.result.split("base64,")[1],
    FileSizeInBytes: readerEvt.size
  };
  arrCounter = arrCounter + 1;
}

    </script>
                                         <!--   uploading image using file reader end   -->

                                         <!-- Start Select Multiple input filed script   -->
    <script>                            
    jQuery(function() {
        jQuery('.multiSelect').each(function(e) {
            let self = jQuery(this);
            let field = self.find('.multiSelect_field');
            let fieldOption = field.find('option');
            let placeholder = field.attr('data-placeholder');

            field.hide().after(`<div class="multiSelect_dropdown"></div>
            <span class="multiSelect_placeholder">` + placeholder + `</span>
            <ul class="multiSelect_list"></ul>
            <span class="multiSelect_arrow"></span>`);

            fieldOption.each(function(e) {
                let optionValue = jQuery(this).val();
                let optionText = jQuery(this).text();
                self.find('.multiSelect_list').append(`<li class="multiSelect_option" data-value="${optionValue}">
                    <a class="multiSelect_text">${optionText}</a>
                </li>`);
            });

            let dropdown = self.find('.multiSelect_dropdown');
            let list = self.find('.multiSelect_list');
            let option = self.find('.multiSelect_option');
            let optionText = self.find('.multiSelect_text');

            dropdown.attr('data-multiple', 'true');
            list.css('top', dropdown.height() + 5);

            option.click(function(e) {
                let self = jQuery(this);
                e.stopPropagation();
                self.addClass('-selected');
                field.find('option:contains(' + self.children().text() + ')').prop('selected', true);
                dropdown.append(function(e) {
                    return jQuery('<span class="multiSelect_choice">'+ self.children().text() +'<svg class="multiSelect_deselect -iconX"><use href="#iconX"></use></svg></span>').click(function(e) {
                        let self = jQuery(this);
                        e.stopPropagation();
                        self.remove();
                        list.find('.multiSelect_option:contains(' + self.text() + ')').removeClass('-selected');
                        list.css('top', dropdown.height() + 5).find('.multiSelect_noselections').remove();
                        field.find('option:contains(' + self.text() + ')').prop('selected', false);
                        if (dropdown.children(':visible').length === 0) {
                            dropdown.removeClass('-hasValue');
                        }
                    });
                }).addClass('-hasValue');
                list.css('top', dropdown.height() + 5);
                if (!option.not('.-selected').length) {
                    list.append('<h5 class="multiSelect_noselections">No Selections</h5>');
                }
            });

            dropdown.click(function(e) {
                e.stopPropagation();
                e.preventDefault();
                dropdown.toggleClass('-open');
                list.toggleClass('-open').scrollTop(0).css('top', dropdown.height() + 5);
            });

            jQuery(document).on('click touch', function(e) {
                if (dropdown.hasClass('-open')) {
                    dropdown.toggleClass('-open');
                    list.removeClass('-open');
                }
            });
        });
    });
    </script>
                                                <!-- End Select Multiple input filed script   -->



    
<svg xmlns="http://www.w3.org/2000/svg" style="display: none;">
    <symbol xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" id="iconX">
        <g stroke-linecap="round" stroke-linejoin="round">
            <line x1="18" y1="6" x2="6" y2="18"></line>
            <line x1="6" y1="6" x2="18" y2="18"></line>
        </g>
    </symbol>
</svg>

                 

</body>

</html>